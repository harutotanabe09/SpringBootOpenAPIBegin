name: Java CI
  
# 実行タイミング定義
on:
  push:
    branches:
    - master

# ジョブ
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    # SCPでデプロイ
    #- name: Deploy file to ssh key
    #  uses: appleboy/scp-action@master
    #  env:
    #    HOST: ${{ secrets.HOST }}
    #    USERNAME: ${{ secrets.USERNAME }}
    #    PORT: ${{ secrets.PORT }}
    #    KEY: ${{ secrets.KEY }}
    #  with:
    #    source: ./build/libs/openapi.jar
    #    target: "test"

    - name: Checkout
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # カスタム必要
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build with Gradle
      run: |
        ./gradlew build
        ls -la ./build/libs/

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        # カスタム必要
        ECR_REPOSITORY: openapijava
        IMAGE_TAG: 1
      working-directory: ./docker
      run: |
        ls -la ../build/libs/
        cp ../build/libs/openapi.jar ./
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ./docker/sample-app
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: sample-app-service
        cluster: default
        wait-for-service-stability: true
